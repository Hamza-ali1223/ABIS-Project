{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "voice",
        "responseMode": "lastNode",
        "options": {}
      },
      "name": "Voice Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1360,
        96
      ],
      "id": "4d01b68e-1d7f-4f66-bf21-b3791b97b2bd",
      "webhookId": "93be66c7-ab66-44d7-834b-096e037fb47c"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=Convert the following user input into a JSON object for action handling. Only use one of three actions: \"reminder\", \"draft email\", or \"chat\".\n\n- If action is \"reminder\", include fields:\n{\n  \"action\": \"reminder\",\n  \"when\": \"(ISO 8601 time)\",\n  \"to_when\": \"(ISO 8601 time)\",\n  \"why\": \"reason for the reminder (example sleep,gym,walk etc)\",\n\"Completion Response\":\"A message telling user that {task name and basic description} has been executed\"\n}\n\n- If action is \"draft email\", include fields:\n{\n  \"action\": \"draft email\",\n  \"subject\": \"email subject\",\n  \"email_type\": \"Text\",\n  \"message\": \"email message\",\n  \"reply_to_subject\": \"subject to reply to, null if new email\",\n\"Completion Response\":\"A message telling user that {task name and basic description} has been executed\"\n}\n\n- If the input does not match any of the above actions (e.g., casual chat), return:\n{\n  \"action\": \"chat\",\n  \"reply\": \"<a friendly response based on the user input>\"\n}\n\nUser Input: {{ $json.body.text }}\n\nRespond only with a valid JSON object. Do not include explanations, Markdown code blocks, or extra text.\n\nyear is 2025 month is 1 sept\n\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1104,
        96
      ],
      "id": "10f54b73-8687-47cf-8c7d-9b897e06df5c",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "R9aCZqRniUV5XlgC",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get LLM output text\nlet rawText = $input.first().json.content.parts[0].text;\n\n// Remove ```json and ``` if present\nrawText = rawText.replace(/```json\\s*/, \"\").replace(/```/g, \"\").trim();\n\n// Parse the cleaned string into JSON\nconst parsed = JSON.parse(rawText);\n\n// Return as workflow output\nreturn [{ json: parsed }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -752,
        96
      ],
      "id": "4122ff81-0dfa-48a0-84cc-0dd1fd517cac",
      "name": "Code"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "tenacioushamza@gmail.com",
          "mode": "list",
          "cachedResultName": "tenacioushamza@gmail.com"
        },
        "start": "={{ $json.when }}",
        "end": "={{ $json.to_when }}",
        "additionalFields": {
          "summary": "={{ $json.why }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        -64,
        -96
      ],
      "id": "3cb155ed-6785-4888-bea1-94f8ea77d52f",
      "name": "Create an event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "jkf0oXUYiLTMDYGj",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "reminder",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ea5630e9-2e69-4569-9e44-2719b7970b66"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Reminder"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9e50edda-c2f3-4f67-ad30-0d74e250a97a",
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "draft email",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "draft email"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f369ed14-2f43-4407-b5be-376b2db1b7fd",
                    "leftValue": "={{ $json.action }}",
                    "rightValue": "chat",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -544,
        80
      ],
      "id": "440a2d78-2b51-4f1c-92ef-202567c3a306",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $json.subject }}",
        "message": "={{ $json.message }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -64,
        80
      ],
      "id": "4957e32c-0158-43ae-8e59-6526749ece2e",
      "name": "Create a draft",
      "webhookId": "47f1ac8d-6018-400a-a4f8-8e8a421ade1a",
      "credentials": {
        "gmailOAuth2": {
          "id": "FHFSPGH6pWZOX0UF",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Run once for all items\n// This code checks if the previous node (Gmail or Calendar) responded correctly\n// and returns a message for your TTS HTTP request.\n\nfor (const item of $input.all()) {\n\n  // --- Check Gmail Draft Response ---\n  if (item.json.message && item.json.message.id) {\n    item.json.reply = \"Your email draft has been successfully created. Please review it before sending.\";\n  }\n\n  // --- Check Google Calendar Event Response ---\n  else if (item.json.id && item.json.htmlLink) {\n    item.json.reply = \"Your calendar event has been created successfully. You can view it on your Google Calendar.\";\n  }\n\n  // --- If No Valid Response ---\n  else {\n    item.json.reply = \"No valid response received from Gmail or Calendar. Please try again.\";\n  }\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        176,
        -128
      ],
      "id": "c37f59b7-6505-463e-b97f-7c1eb910a43e",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "jsCode": "// Run once for all items\n// This code checks if the previous node (Gmail or Calendar) responded correctly\n// and returns a message for your TTS HTTP request.\n\nfor (const item of $input.all()) {\n\n  // --- Check Gmail Draft Response ---\n  if (item.json.message && item.json.message.id) {\n    item.json.reply = \"Your email draft has been successfully created. Please review it before sending.\";\n  }\n\n  // --- Check Google Calendar Event Response ---\n  else if (item.json.id && item.json.htmlLink) {\n    item.json.reply = \"Your calendar event has been created successfully. You can view it on your Google Calendar.\";\n  }\n\n  // --- If No Valid Response ---\n  else {\n    item.json.reply = \"No valid response received from Gmail or Calendar. Please try again.\";\n  }\n}\n\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        176,
        48
      ],
      "id": "09772aff-bcac-48e5-858a-f0974d88e6ea",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/speak",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "reply",
              "value": "={{ $json.reply }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        384,
        48
      ],
      "id": "0a3823bc-848d-4355-b17e-f1c00829757f",
      "name": "Gmail Response"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/speak",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "reply",
              "value": "={{ $json.reply }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        384,
        -128
      ],
      "id": "38a952b8-6486-4914-b13a-0563f20a2dff",
      "name": "Calender Response"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://host.docker.internal:8000/speak",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "reply",
              "value": "={{ $json.reply }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        208,
        256
      ],
      "id": "0889d362-8332-4dcc-a7f0-cf57d99f311c",
      "name": "Chat Response"
    }
  ],
  "pinData": {},
  "connections": {
    "Voice Webhook": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Create an event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create a draft",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a draft": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create an event": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Calender Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Gmail Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "4c1838ff-798c-40b6-beac-555c3a2b33d4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6b327095485dfa2344600d61892acea23397c033dcc007764c6101624569e81c"
  },
  "id": "B2Ir0Aw2ByMcyZnj",
  "tags": []
}